@using X.PagedList
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@using Sportify.Web.Constants

@model IEnumerable<Sportify.Data.ViewModels.Sports.SportViewModel>

@{
    ViewData["Title"] = "AllSports";
}

<h2>AllSports</h2>

<p>
    <a asp-area="@Area.Sport" asp-controller="@Controllers.Sports" asp-action="@Actions.SportsAdd">Add New Sport</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
<div class="text-center">
    @Html.PagedListPager((IPagedList)@Model, page => Url.Action("AllSports", new { page = page }), 
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Never,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
            UlElementClasses = new string[] { "pagination", "justify-content-center" },
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
        })
</div>