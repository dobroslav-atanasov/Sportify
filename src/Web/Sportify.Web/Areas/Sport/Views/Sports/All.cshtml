@using X.PagedList
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@using Sportify.Constants

@model IEnumerable<Sportify.Data.ViewModels.Sports.SportViewModel>

@{
    ViewData["Title"] = "All";
}

<br />

<h1 class="text-center">Sports</h1>

<br />

<p class="text-center">
    <a asp-area="Sport" asp-controller="Sports" asp-action="Add" class="btn btn-primary btn-lg">Add Sport</a>
</p>

<br />

<table class="table mx-auto table-hover">
    <thead>
    <tr class="row table-primary">
        <th class="col-md-6 text-center">
            Sport Name
        </th>
        <th class="col-md-6 text-center">
            Actions
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var sport in Model)
    {
        <tr class="row table-dark">
            <td class="col-md-6 text-center">
                @sport.Name
            </td>
            <td class="col-md-6 text-center">
                <a asp-area="Sport" asp-controller="Sports" asp-action="Edit" asp-route-id="@sport.Id" class="btn btn-primary">Edit</a> 
                <a asp-area="Sport" asp-controller="Sports" asp-action="Details" asp-route-id="@sport.Id" class="btn btn-success">Details</a> 
            </td>
        </tr>
    }
    </tbody>
</table>

<div class="text-center">
    @Html.PagedListPager((IPagedList)@Model, page => Url.Action("All", new { page = page }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Never,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
            UlElementClasses = new string[] { "pagination", "justify-content-center" },
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
        })
</div>

<br />

<div class="text-center">
    <a asp-area="Administrator" asp-controller="Home" asp-action="Index">Back to home</a>
</div>